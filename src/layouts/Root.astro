---
export interface Props {
	title?: string
	description?: string
	classes?: string
	includeEmailSignup?: boolean
}

const {
	title,
	description = 'A 100% free and growing collection of AI prompts.',
	classes = '',
	includeEmailSignup = true,
} = Astro.props

import '@styles/tailwind.css'

import ColorThemeToggle from '@components/ColorThemeToggle.svelte'
import AccountLink from '@components/AccountLink.svelte'
import { themeStorageKey, darkThemeClass, userSessionStorageKey, isUserStorageKey } from '@src/constants.ts'
import AccountSignupCallout from '@components/AccountSignupCallout.svelte'
---

<!DOCTYPE html>
<html lang="en">
	<!-- prettier-ignore -->
	<head>
		<script is:inline define:vars={{themeStorageKey, darkThemeClass, isUserStorageKey, userSessionStorageKey}}>
			!(function () {
				const themeValue = (() => {
					if (localStorage && localStorage.getItem(themeStorageKey)) {
						return localStorage.getItem(themeStorageKey)
					} else if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
						return 'dark'
					} else {
						return 'light'
					}
				})()

				if (themeValue === 'light') {
					document.documentElement.classList.remove(darkThemeClass)
				} else {
					document.documentElement.classList.add(darkThemeClass)
				}
				window.localStorage.setItem(themeStorageKey, themeValue)

				/* 
				If user and sessionStorage has not been set, fetch data and store in sessionStorage to prevent needing to refetch this on each navigation
				*/

				if (window.localStorage.getItem(isUserStorageKey) && !window.sessionStorage.getItem(userSessionStorageKey)) {
					fetch(`/api/user`, {
						method: 'GET',
					}).then(async (resp) => {
						if (resp.ok) {
							const data = await resp.json()
							window.sessionStorage.setItem(userSessionStorageKey, JSON.stringify(data))
						} 
					})
				}
			})()
		</script>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="canonical" href={`https://www.prompts4all.com${Astro.url.pathname === '/' ? '' : Astro.url.pathname}`} />
		<title> {title ? `${title} - Prompts4All` : 'Prompts4All'} </title>
		<meta name="description" content={description} />
		<link rel="sitemap" href="/sitemap-index.xml" />
		<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
		<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
		<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
		<link rel="manifest" href="/site.webmanifest" />
		<script defer data-domain="prompts4all.com" data-api="/pb-jam/all-the-pb/event" src="/pb-jam/all-the-pb/script.js" ></script>
	</head>
	<body class="bg-white dark:bg-gray-900 px-3 sm:px-6">
		<header class="flex justify-between max-w-[1200px] w-full mx-auto mb-16 mt-12">
			<a
				href="/"
				class="font-mono text-2xl text-gray-600 hover:text-gray-950 dark:text-gray-200 dark:hover:text-white inline-flex justify-center"
			>
				<span>&lcub;</span>
				<span class="px-1.5">Prompts4All</span>
				<span>&rcub;</span>
			</a>
			<div class="flex">
				<AccountLink client:load />
				<ColorThemeToggle client:load />
			</div>
		</header>
		<div class={classes}>
			<slot />
		</div>
		<footer class="pt-32 max-w-[1200px] mx-auto">
			{includeEmailSignup && <AccountSignupCallout client:only />}
			<section class="dashedTopBg py-32">
				<div class="text-center mb-6">
					<a
						href="/"
						class="font-mono text-sm text-gray-600 hover:text-gray-950 dark:text-gray-200 dark:hover:text-white inline-flex justify-center"
					>
						<span>&lcub;</span>
						<span class="mx-1.5">Prompts4All</span>
						<span>&rcub;</span>
					</a>
				</div>
				<div class="text-center prose prose-sm mx-auto prose-p:text-gray-500 dark:prose-p:text-gray-200">
					<p>
						A free and open-source project by <a
							href="https://twitter.com/jaymakes11"
							class="defaultTextLink"
							>@jaymakes11</a
						>.
					</p>
					<p>
						Interested in adding a prompt or feature? <a
							href="https://github.com/jaymakes11/prompts4all"
							class="defaultTextLink"
							>Please contribute</a
						>!
					</p>
				</div>
			</section>
		</footer>
	</body>
</html>

<style is:global>
	.dashedTopBg {
		background-image: linear-gradient(to right, rgb(34, 34, 34) 0 10%, rgba(255, 255, 255, 0) 10%);
		background-position: top;
		background-size: 8px 1px;
		background-repeat: repeat-x;
	}
	.dark .dashedTopBg {
		background-image: linear-gradient(to right, rgb(255, 255, 255) 0 10%, rgba(246, 246, 246, 0) 10%);
	}
</style>
